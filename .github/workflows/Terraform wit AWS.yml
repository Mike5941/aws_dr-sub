name: Conditional Terraform Actions
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply or destroy)'
        required: true
        default: 'apply'
      resource:
        description: 'Resource to target (all, network, database)'
        required: true
        default: 'all'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Network Resource Actions
      - name: Network/Terraform Apply
        if: github.event.inputs.action == 'apply' && (github.event.inputs.resource == 'all' || github.event.inputs.resource == 'network')
        run: |
          terraform init -migrate-state
          terraform plan -auto-approve -lock=false
        working-directory: ./network/primary

      # Database Resource Actions
      - name: Database/Terraform Apply
        if: github.event.inputs.action == 'apply' && (github.event.inputs.resource == 'all' || github.event.inputs.resource == 'database')
        run: |
          terraform init -migrate-state
          terraform plan -auto-approve -lock=false
        working-directory: ./database/mysql

      - name: Database/Terraform Destroy
        if: github.event.inputs.action == 'destroy' && (github.event.inputs.resource == 'all' || github.event.inputs.resource == 'database')
        run: |
          terraform init -migrate-state
          terraform destroy -auto-approve -lock=false
        working-directory: ./database/mysql

      - name: Network/Terraform Destroy
        if: github.event.inputs.action == 'destroy' && (github.event.inputs.resource == 'all' || github.event.inputs.resource == 'network')
        run: |
          terraform init -migrate-state
          terraform destroy -auto-approve -lock=false
        working-directory: ./network/primary