name: Provisioning with Terraform after signing in to AWS
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply or destroy)'
        required: true
        default: 'apply'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Apply for Network
      - name: Network/Terraform Init (Apply)
        if: github.event.inputs.action == 'apply'
        run: terraform init
        working-directory: ./network/primary

      - name: Network/Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve
        working-directory: ./network/primary

      # Apply for Database
      - name: Database/Terraform Init (Apply)
        if: github.event.inputs.action == 'apply'
        run: terraform init
        working-directory: ./database/mysql

      - name: Database/Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve
        working-directory: ./database/mysql

      # Destroy in reverse order: Database first, then Network
      - name: Database/Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: ./database/mysql

      - name: Network/Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: ./network/primary